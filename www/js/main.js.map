{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","source/board.ts","source/disc.ts","source/main.ts"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","Board","width","height","this","reset","prototype","getWidth","getHeight","getDisc","column","row","RangeError","theBoard","getDiscColor","disc","getColor","getDiscPlayerId","getPlayerId","Array","j","placeDisc","placed","log","console","toString","char","charAt","bottomRow","Disc","color","playerId","board_1","disc_1","board","redDisc1","yellowDisc1"],"mappings":"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","file":"main.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import {Disc} from \"./disc\";\r\n\r\nexport class Board {\r\n    private readonly width: number;\r\n    private readonly height: number;\r\n    private theBoard: Disc[][];\r\n\r\n    constructor(width: number, height: number) {\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        // call reset to initialize the board\r\n        this.reset();\r\n    }\r\n\r\n    getWidth() {\r\n        return this.width;\r\n    }\r\n\r\n    getHeight() {\r\n        return this.height;\r\n    }\r\n\r\n    getDisc(column: number, row: number) {\r\n\r\n        if(column < 0 || column >= this.width) {\r\n            throw RangeError(\"Invalid column value: \" + column);\r\n        }\r\n\r\n        if(row < 0 || row >= this.height) {\r\n            throw RangeError(\"Invalid row value: \" + row);\r\n        }\r\n\r\n        let disc = this.theBoard[column][row];\r\n        return disc;\r\n    }\r\n\r\n    getDiscColor(column: number, row: number) {\r\n\r\n        if(column < 0 || column >= this.width) {\r\n            throw RangeError(\"Invalid column value: \" + column);\r\n        }\r\n\r\n        if(row < 0 || row >= this.height) {\r\n            throw RangeError(\"Invalid row value: \" + row);\r\n        }\r\n\r\n        let disc = this.theBoard[column][row];\r\n        if(disc) {\r\n            return disc.getColor();\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getDiscPlayerId(column: number, row: number) {\r\n\r\n        if(column < 0 || column >= this.width) {\r\n            throw RangeError(\"Invalid column value: \" + column);\r\n        }\r\n\r\n        if(row < 0 || row >= this.height) {\r\n            throw RangeError(\"Invalid row value: \" + row);\r\n        }\r\n\r\n        let disc = this.theBoard[column][row];\r\n        if(disc) {\r\n            return disc.getPlayerId();\r\n        }\r\n        return null;\r\n    }\r\n\r\n    reset() {\r\n        // initialize board with nulls\r\n        this.theBoard = new Array<Array<Disc>>();\r\n        for(let i = 0; i < this.width; i++){\r\n            this.theBoard[i] = new Array<Disc>();\r\n            for(let j = 0; j < this.height; j++){\r\n                this.theBoard[i][j] = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    // places disc into the specified column\r\n    // returns true if disc can be placed, false otherwise\r\n    placeDisc(disc: Disc, column: number) {\r\n\r\n        if(column < 0 || column >= this.width) {\r\n            return false;\r\n        }\r\n\r\n        let placed = false;\r\n        for(let j = 0; j < this.height; j++) {\r\n            if(this.theBoard[column][j] == null) {\r\n                this.theBoard[column][j] = disc;\r\n                placed = true;\r\n                break;\r\n            }\r\n        }\r\n        return placed;\r\n    }\r\n\r\n    // prints the board out to the console\r\n\r\n    log() {\r\n        console.log(\"\");\r\n\r\n        for(let j = this.height-1; j >=0; j--){\r\n            let row = j.toString() + \" \";\r\n            for(let i = 0; i < this.width; i++){\r\n                let char = \".\";\r\n                let disc = this.theBoard[i][j];\r\n                if(disc != null){\r\n                    char = disc.getColor().charAt(0);\r\n                }\r\n                row += char + \" \";\r\n            }\r\n            console.log(row)\r\n        }\r\n\r\n        let bottomRow = \"  \";\r\n        for(let i = 0 ; i < this.width; i++)\r\n        {\r\n            bottomRow += i.toString() + \" \";\r\n        }\r\n        console.log(bottomRow)\r\n    }\r\n\r\n}","export class Disc {\r\n    private readonly color: string;\r\n    private readonly playerId: number;\r\n\r\n    constructor(color: string, playerId: number) {\r\n        this.color = color;\r\n        this.playerId = playerId;\r\n    }\r\n\r\n    getColor() {\r\n        return this.color;\r\n    }\r\n    \r\n    getPlayerId() {\r\n        return this.playerId;\r\n    }\r\n}","// <reference path=\"./types/socket.io-client.d.ts\"/>\r\nimport {Board} from \"./board\";\r\nimport {Disc} from \"./disc\"\r\n\r\n// var hwDiv = document.createElement(\"div\");\r\n// document.body.appendChild(hwDiv);\r\n// hwDiv.innerText = \"Hello World\"\r\n\r\n// var butt = document.createElement(\"button\");\r\n// butt.innerText = \"click it\"\r\n// document.body.appendChild(butt);\r\n\r\n// var fullWin = document.createElement(\"div\");\r\n// fullWin.id = \"FullWindow\";\r\n// fullWin.classList.add(\"hidden\");\r\n// document.body.appendChild(fullWin);\r\n\r\n// fullWin.onclick = function hide() {\r\n//     fullWin.classList.add(\"hidden\");\r\n// }\r\n\r\n// butt.onclick = function show() {\r\n//     console.log(\"butt clicked\");\r\n//     fullWin.classList.remove(\"hidden\");\r\n// }\r\n\r\nlet board = new Board(7,6);\r\n\r\nlet redDisc1 = new Disc(\"red\", 1)\r\nlet yellowDisc1 = new Disc(\"yellow\", 2);\r\n\r\nboard.placeDisc(redDisc1,0);\r\nboard.placeDisc(yellowDisc1,0);\r\nboard.placeDisc(redDisc1,0);\r\nboard.placeDisc(yellowDisc1,0);\r\nboard.placeDisc(redDisc1,0);\r\nconsole.log(board.placeDisc(yellowDisc1,0));\r\nconsole.log(board.placeDisc(redDisc1,0));\r\nconsole.log(board.placeDisc(yellowDisc1,0));\r\nboard.log();\r\n\r\nboard.placeDisc(redDisc1,1);\r\nboard.log();\r\nconsole.log(board.placeDisc(redDisc1,6));\r\nconsole.log(board.placeDisc(redDisc1,7));"]}